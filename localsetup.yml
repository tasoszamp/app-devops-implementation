- name: Monitoring Setup
  hosts: localhost
  connection: local
  vars_files:
    - group_vars/all/vault.yml


  tasks:

  - name: Install Docker
    become: true
    apt:
      name: docker.io
      state: present

  - name: Start Docker
    become: true
    service:
      name: docker
      state: started
      enabled: true

  - name: Install docker Python library using pip
    pip:
      name: docker
      executable: pip3

  - name: Create Folder /srv/prometheus if not exist
    file:
      path: /srv/{{ item }}
      mode: 0777
      state: directory
    with_items: [prometheus, prometheus/prometheus_data]

  - name: Create Folder /srv/grafana if not exist
    file:
      path: /srv/{{ item }}
      mode: 0777
      state: directory
    with_items: [grafana, grafana/provisioning, grafana/dashboards, grafana/provisioning/dashboards]

  - name: Create Folder /srv/exporter if not exist
    file:
      path: /srv/exporter
      mode: 0777
      state: directory

  - name: Copy prometheus config
    ansible.builtin.copy:
      src: prometheus/
      dest: /srv/prometheus/
      mode: 0777
  
  - name: Copy grafana provisioning
    ansible.builtin.copy:
      src: grafana/dashboards.yml
      dest: /srv/grafana/provisioning/dashboards/dashboards.yml
      mode: 0777
  
  - name: Copy grafana dashboards
    ansible.builtin.copy:
      src: grafana/dashboard.json
      dest: /srv/grafana/dashboards/dashboard.json
      mode: 0777

  - name: Copy exporter config
    ansible.builtin.copy:
      src: exporter/
      dest: /srv/exporter/
      mode: 0777

  - name: Create Prometheus container
    become: true
    docker_container:
      name: prometheus
      restart_policy: always
      image: prom/prometheus:v2.46.0
      volumes:
        - /srv/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - /srv/prometheus/prometheus_data:/prometheus
      command: >
        --config.file=/etc/prometheus/prometheus.yml
        --storage.tsdb.path=/prometheus
        --web.console.libraries=/etc/prometheus/console_libraries
        --web.console.templates=/etc/prometheus/consoles
        --web.enable-lifecycle
        --storage.tsdb.retention.time=1y
      published_ports: "9090:9090"
      docker_host: tcp://localhost:2375

  - name: Create Grafana container
    become: true
    docker_container:
      name: grafana
      restart_policy: always
      image: grafana/grafana:10.0.3
      volumes:
        - /srv/grafana:/var/lib/grafana
        - /srv/grafana/provisioning:/etc/grafana/provisioning
      env:
        GF_SECURITY_ADMIN_USER: "admin"
        GF_SECURITY_ADMIN_PASSWORD: "grafana"
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
        GF_PATHS_DATA: "/var/lib/grafana"
      published_ports: "3000:3000"

  - name: Create CloudWatch-exporter container
    become: true
    docker_container:
      name: gitlab-exporter
      restart_policy: always
      image: prom/cloudwatch-exporter:v0.15.5
      volumes:
        - /srv/exporter/config.yml:/config/config.yml
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
      published_ports: "9106:9106"
